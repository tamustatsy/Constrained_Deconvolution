library(batch)
n.ind_list <- c(1000, 5000, 10000, 15000)
for (i in 1:length(n.ind_list))  {
dir.create(paste(getwd(),result,n.ind_list[i], sep="/"))
}
for (i in 1:length(n.ind_list))  {
dir.create(paste(getwd(),"result",n.ind_list[i], sep="/"))
}
for (i in 1:length(n.ind_list))  {
dir.create(paste(getwd(),n.ind_list[i], sep="/"))
}
dir.create(paste(getwd(),"result", sep="/"))
for (i in 1:length(n.ind_list))  {
dir.create(paste(getwd(),n.ind_list[i], sep="/"))
}
for (i in 1:length(n.ind_list))  {
dir.create(paste(getwd(),"result",n.ind_list[i], sep="/"))
}
n.ind <- 5000
res <- NULL
for(seed in (1000 + c(1:100)*100)){
filename <- paste("seed", seed, "_HOMO", sep = "")
res_sub <- read.table(paste("./result/", n.ind, "/", filename, ".csv", sep = ""), row.names = NULL, sep = ",", header = TRUE,
col.names = c("seed", "imae_CB", "imse_CB", "wass_CB", "imae_Ker",
"imse_Ker", "wass_Ker", "x.grid", "density.CB", "xx.Ker", "density.Ker"))
res <- rbind(res, res_sub)
}
dim(res)
res_mat <- as.matrix(res)
res_mat <- matrix(as.numeric(res_mat), ncol = 11)
res_1 <- res_mat[,2:7]
#---------compute mean and sd---------
mean <- apply(res_1, 2, mean)
mean
sd <- apply(res_1, 2, sd)
?rlaplace
library(MCMCpack)
?rlaplace
library(Rcpp)
library(truncdist)
?rlaplace
library(VGAM)                #required by Mysample.cpp
?rlaplace
seed(1100)
set.seed(1100)
rlaplace(n, location = 0, scale = 1)
set.seed(1100)
rlaplace(1, location = 0, scale = 1)
rlaplace(1, location = 0, scale = 2)
rlaplace(1, location = 0, scale = 3)
set.seed(1100)
rlaplace(3, location = 0, scale = c(1,2,3))
set.seed(1100)
rlaplace(1, location = 0, scale = c(1,2,3))
n.ind <- 5000
res <- NULL
for(seed in (1000 + c(1:100)*100)){
filename <- paste("seed", seed, "_HET", sep = "")
res_sub <- read.table(paste("./result/", n.ind, "/", filename, ".csv", sep = ""), row.names = NULL, sep = ",", header = TRUE,
col.names = c("seed", "imae_CB", "imse_CB", "wass_CB", "excprob_CB", "imae_Ker",
"imse_Ker", "wass_Ker", "excprob_Ker", "x.grid", "density.CB", "xx.Ker", "density.Ker"))
res <- rbind(res, res_sub)
}
dim(res)
res_mat <- as.matrix(res)
res_mat <- matrix(as.numeric(res_mat), ncol = 13)
res_1 <- res_mat[,2:9]
#---------compute mean and sd---------
mean <- apply(res_1, 2, mean)
